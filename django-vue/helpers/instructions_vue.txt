git commit -m 'djvue ch4 orders backend end'

###############################################################
### 3.Django Start (Daily)
###############################################################

cd django-vue/

source env/Scripts/activate

cd api  

python manage.py runserver


###########################################
### 1. Virtual Environment
###########################################
python -m venv env

source env/Scripts/activate

# no packages should be returned from a new venv
pip freeze

deactivate

############################
pip install -r helpers/requirements_manual.txt

python.exe -m pip install --upgrade pip

pip freeze > requirements.txt


###############################################################
### 2. Django Start
### https://docs.djangoproject.com/en/5.1/intro/tutorial01/
###############################################################

source env/Scripts/activate

cd django-vue/

django-admin startproject api .

cd api && python manage.py runserver

python manage.py runserver


# add the new app in the settings file: INSTALLED_APPS

#####################################
Admin section
#####################################

cd api/
python manage.py runserver

### create tables in the db automatically
python manage.py migrate

### create db admin
python manage.py createsuperuser

#####################################
Create an App
#####################################
cd api/

python manage.py startapp reporting

#####################################
Migrations
#####################################
cd api/

python manage.py makemigrations

python manage.py migrate



###################################################
DB Manual Manipulation - Data Insertion via Shell
###################################################

python manage.py shell

from reporting.models import Order
from django.utils import timezone

data = Order(amount=100, description="This is a test order", created_time=timezone.now())
data.save()

exit()

########
# restart & check db records
########
python manage.py shell
from reporting.models import Order
Order.objects.all()


###################################################
DB Manual Manipulation - Seeding Data into DB
###################################################
1) create a folder named [fixtures] under the project directory
2) paste the testseed.json file there
3) python manage.py loaddata testseed.json


##############################
Frontend, Vue
##############################
cd django-vue/client

cd client

npx -p @vue/cli vue create client

npm install axios

npm run serve


##########################################
After the above proof of concept
Remove 
    files in reporting/migraions
    db.sqlite

Start with a clean model structure
#########################################

After deleting the whole migrations folder and the poc db, no changed have been detected when running 
python manage.py makemigrations

AI solution:

Here's what happened and why you were getting "No changes detected":

Your migrations directory was empty, but Django still said "No changes detected" because it couldn't properly detect the state of your models.
By explicitly specifying the app name (python manage.py makemigrations reporting), we forced Django to create the initial migrations for your models.
The migrations have been created successfully and include all your models:
Category
Customer
Supplier
Product
Order
We then applied the migrations using python manage.py migrate, which created all the necessary database tables.
Now your database schema is in sync with your models, and everything should work as expected. If you make any changes to your models in the future, running python manage.py makemigrations will detect those changes and create new migration files accordingly.
#########################################

Copy downloaded seeddata.json to fixtures
python manage.py loaddata seeddata.json
(N.b. keys in json file should correspond to model field names)


